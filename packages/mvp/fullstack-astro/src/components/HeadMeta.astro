---
import { z } from "astro/zod";

const SITE_NAME = "MVP CRM";

const basic = z.object({
  locale: z.string().default("en-US"),
  title: z.string(),
  description: z.string(),
  author: z.string().optional(),
});

const articleSchema = z.object({
  published_time: z.coerce.date(),
  modified_time: z.coerce.date(),
});

const ogSchema = z.object({
  title: z.string().optional(),
  description: z.string().optional(),
  article: articleSchema.optional(),
  image: z
    .object({
      /** Path to an image file. */
      file: z.string(),
      alt: z.string().optional(),
    })
    // TODO: create default OpenGraph image.
    .default({
      file: "",
      alt: "",
    }),
});

// Twitter Cards will use OpenGraph images.
const twitterSchema = z.object({
  card: z.enum(["summary", "summary_large_image"]).default("summary_large_image"),
  /** Username for the website used in the card footer. */
  site: z.string().refine(str => str.startsWith("@")).optional(),
  /** Username for the content creator or author. */
  creator: z.string().refine(str => str.startsWith("@")).optional(),
});

const headMeta = basic
  .extend({
    og: ogSchema.default({}),
  twitter: twitterSchema.default({}),
  })
  .transform((data) => {
    const { og, twitter, ...basic } = data;

    return {
      ...basic,
      title: `${basic.title} | ${SITE_NAME}`,
      twitter,
      og: {
        ...og,
        type: og.article ? "article" : "website",
        title: og.title ?? basic.title,
        description: og.description ?? basic.description,
      },
    };
  });

type Props = z.input<typeof headMeta>;

const { title, description, og } = headMeta.parse(Astro.props);
---

<meta charset="utf-8" />
<meta name="generator" content={Astro.generator} />
<meta name="viewport" content="initial-scale=1, viewport-fit=cover" />

<title>{title}</title>
<meta name="description" content={description} />

<meta property="og:title" content={og.title}/>
<meta property="og:description" content={og.description}/>
<meta property="og:image" content={og.image.file}/>
<meta property="og:type" content={og.type}/>
